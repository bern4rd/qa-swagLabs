<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20240530 21:50:12.386" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="/Users/felipe.diniz/Documents/Github/qa-swagLabs/tests/login.robot">
<test id="s1-t1" name="Scenario: Filter products by price" line="27">
<kw name="Before Tests" library="base_keywords" type="SETUP">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{appium_config_default}</var>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>appium:noReset=${True}</arg>
<arg>appium:fullReset=${false}</arg>
<arg>appium:forceAppLaunch=true</arg>
<arg>platformName=${PLATFORM}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240530 21:50:12.488" level="INFO">&amp;{appium_config_default} = { remote_url=http://localhost:4723/wd/hub | appium:noReset=True | appium:fullReset=False | appium:forceAppLaunch=true | platformName=iOS }</msg>
<status status="PASS" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{appium_config_default}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 21:50:12.488" level="INFO">&amp;{appium_config_default} = { remote_url=http://localhost:4723/wd/hub | appium:noReset=True | appium:fullReset=False | appium:forceAppLaunch=true | platformName=iOS }</msg>
<status status="PASS" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</kw>
<if>
<branch type="IF" condition="&quot;${PLATFORM}&quot;==&quot;Android&quot;">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{appium_config_android}</var>
<arg>appPackage=${APP_PACKAGE}</arg>
<arg>udid=${UDID_Android}</arg>
<arg>automationName=${AUTOMATION_NAME_ANDROID}</arg>
<arg>appActivity=${APP_PACKAGE}.MainActivity</arg>
<arg>useNewWDA=${False}</arg>
<arg>newCommandTimeout=100</arg>
<arg>autoGrantPermissions=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{appium_config_default}</var>
<arg>&amp;{appium_config_default}</arg>
<arg>&amp;{appium_config_android}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{appium_config_default}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.488"/>
</branch>
<branch type="ELSE IF" condition="&quot;${PLATFORM}&quot;==&quot;iOS&quot;">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{appium_config_iOS}</var>
<arg>bundleId=${BUNDLE_ID}</arg>
<arg>udid=${UDID_iOS}</arg>
<arg>useNewWDA=${False}</arg>
<arg>automationName=${AUTOMATION_NAME_IOS}</arg>
<arg>appium:settings[snapshotMaxDepth]=${100}</arg>
<arg>autoGrantPermissions=${True}</arg>
<arg>newCommandTimeout=100</arg>
<arg>showXcodeLog=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240530 21:50:12.489" level="INFO">&amp;{appium_config_iOS} = { bundleId=com.saucelabs.SwagLabsMobileApp | udid=CCB5450C-AB2F-44D5-8BA5-48D36746C0AD | useNewWDA=False | automationName=XCUITest | appium:settings[snapshotMaxDepth]=100 | autoGrantPermissions=True |...</msg>
<status status="PASS" starttime="20240530 21:50:12.489" endtime="20240530 21:50:12.489"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{appium_config_default}</var>
<arg>&amp;{appium_config_default}</arg>
<arg>&amp;{appium_config_iOS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240530 21:50:12.489" level="INFO">&amp;{appium_config_default} = { remote_url=http://localhost:4723/wd/hub | appium:noReset=True | appium:fullReset=False | appium:forceAppLaunch=true | platformName=iOS | bundleId=com.saucelabs.SwagLabsMobileApp | udid=CCB5450C-AB2F...</msg>
<status status="PASS" starttime="20240530 21:50:12.489" endtime="20240530 21:50:12.489"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{appium_config_default}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 21:50:12.490" level="INFO">&amp;{appium_config_default} = { remote_url=http://localhost:4723/wd/hub | appium:noReset=True | appium:fullReset=False | appium:forceAppLaunch=true | platformName=iOS | bundleId=com.saucelabs.SwagLabsMobileApp | udid=CCB5450C-AB2F...</msg>
<status status="PASS" starttime="20240530 21:50:12.489" endtime="20240530 21:50:12.490"/>
</kw>
<status status="PASS" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.490"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Invalid platform: ${PLATFORM}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240530 21:50:12.490" endtime="20240530 21:50:12.490"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:12.490" endtime="20240530 21:50:12.490"/>
</branch>
<status status="PASS" starttime="20240530 21:50:12.488" endtime="20240530 21:50:12.490"/>
</if>
<kw name="Open Application" library="AppiumLibrary">
<arg>&amp;{appium_config_default}</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20240530 21:50:12.490" endtime="20240530 21:50:18.240"/>
</kw>
<status status="PASS" starttime="20240530 21:50:12.487" endtime="20240530 21:50:18.240"/>
</kw>
<kw name="Perform Login" library="base_keywords">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${LOGIN_BTN}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:18.241" endtime="20240530 21:50:18.412"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:18.412" endtime="20240530 21:50:18.489"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:18.489" endtime="20240530 21:50:18.563"/>
</kw>
<kw name="Enter Credentials" library="base_keywords">
<arg>${username}</arg>
<arg>${password}</arg>
<kw name="Wait Until Element Is Interactive" library="base_keywords">
<arg>${USERNAME_FIELD}</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:18.564" endtime="20240530 21:50:18.637"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:18.637" endtime="20240530 21:50:18.759"/>
</kw>
<status status="PASS" starttime="20240530 21:50:18.563" endtime="20240530 21:50:18.759"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>${username}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20240530 21:50:18.762" level="INFO">Typing text 'standard_user' into text field 'accessibility_id=test-Username'</msg>
<status status="PASS" starttime="20240530 21:50:18.759" endtime="20240530 21:50:19.909"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20240530 21:50:19.913" level="INFO">Typing text 'secret_sauce' into text field 'accessibility_id=test-Password'</msg>
<status status="PASS" starttime="20240530 21:50:19.909" endtime="20240530 21:50:20.928"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${LOGIN_BTN}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240530 21:50:20.935" level="INFO">Clicking element 'accessibility_id=test-LOGIN'.</msg>
<status status="PASS" starttime="20240530 21:50:20.929" endtime="20240530 21:50:21.985"/>
</kw>
<status status="PASS" starttime="20240530 21:50:18.563" endtime="20240530 21:50:21.985"/>
</kw>
<status status="PASS" starttime="20240530 21:50:18.240" endtime="20240530 21:50:21.985"/>
</kw>
<kw name="Home Page Should Be Open" library="base_keywords">
<kw name="Wait Until Element Is Interactive" library="base_keywords">
<arg>${HAMBURGUER_MENU}</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:21.989" endtime="20240530 21:50:22.186"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:22.186" endtime="20240530 21:50:22.454"/>
</kw>
<status status="PASS" starttime="20240530 21:50:21.986" endtime="20240530 21:50:22.454"/>
</kw>
<kw name="Wait Until Element Is Interactive" library="base_keywords">
<arg>${CART_MENU}</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:22.455" endtime="20240530 21:50:22.628"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:22.628" endtime="20240530 21:50:22.896"/>
</kw>
<status status="PASS" starttime="20240530 21:50:22.454" endtime="20240530 21:50:22.897"/>
</kw>
<status status="PASS" starttime="20240530 21:50:21.985" endtime="20240530 21:50:22.897"/>
</kw>
<kw name="Filter Products">
<arg>filer_type=Price (low to high)</arg>
<kw name="Wait Until Element Is Interactive" library="base_keywords">
<arg>accessibility_id=test-Modal Selector Button</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20240530 21:50:22.899" endtime="20240530 21:50:23.071"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:23.071" endtime="20240530 21:50:23.338"/>
</kw>
<status status="PASS" starttime="20240530 21:50:22.898" endtime="20240530 21:50:23.338"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>accessibility_id=test-Modal Selector Button</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240530 21:50:23.343" level="INFO">Clicking element 'accessibility_id=test-Modal Selector Button'.</msg>
<status status="PASS" starttime="20240530 21:50:23.338" endtime="20240530 21:50:24.346"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>accessibility_id=${filer_type}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:24.346" endtime="20240530 21:50:24.662"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>accessibility_id=${filer_type}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240530 21:50:24.666" level="INFO">Clicking element 'accessibility_id=Price (low to high)'.</msg>
<status status="PASS" starttime="20240530 21:50:24.662" endtime="20240530 21:50:25.638"/>
</kw>
<status status="PASS" starttime="20240530 21:50:22.897" endtime="20240530 21:50:25.638"/>
</kw>
<kw name="Products Should Be Filtered">
<arg>filer_type=Price (low to high)</arg>
<kw name="Page Should Not Contain Element" library="AppiumLibrary">
<arg>accessibility_id=${filer_type}</arg>
<doc>Verifies that current page not contains `locator` element.</doc>
<msg timestamp="20240530 21:50:25.750" level="INFO">Current page not contains element 'accessibility_id=Price (low to high)'.</msg>
<status status="PASS" starttime="20240530 21:50:25.639" endtime="20240530 21:50:25.750"/>
</kw>
<if>
<branch type="IF" condition="&quot;${filer_type}&quot; == &quot;Price (low to high)&quot;">
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>accessibility_id=assets/src/img/red-onesie.jpg</arg>
<arg>timeout=5</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" starttime="20240530 21:50:25.751" endtime="20240530 21:50:26.030"/>
</kw>
<status status="PASS" starttime="20240530 21:50:25.751" endtime="20240530 21:50:26.031"/>
</branch>
<branch type="ELSE IF" condition="&quot;${filer_type}&quot; == &quot;Price (high to low)&quot;">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="NOT RUN" starttime="20240530 21:50:26.031" endtime="20240530 21:50:26.031"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:26.031" endtime="20240530 21:50:26.031"/>
</branch>
<branch type="ELSE IF" condition="&quot;${filer_type}&quot; == &quot;Name (A to Z)&quot;">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="NOT RUN" starttime="20240530 21:50:26.031" endtime="20240530 21:50:26.032"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:26.031" endtime="20240530 21:50:26.032"/>
</branch>
<branch type="ELSE IF" condition="&quot;${filer_type}&quot; == &quot;Name (Z to A)&quot;">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="NOT RUN" starttime="20240530 21:50:26.032" endtime="20240530 21:50:26.032"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:26.032" endtime="20240530 21:50:26.032"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>The filter ${filer_type} is not supported</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240530 21:50:26.032" endtime="20240530 21:50:26.032"/>
</kw>
<status status="NOT RUN" starttime="20240530 21:50:26.032" endtime="20240530 21:50:26.032"/>
</branch>
<status status="PASS" starttime="20240530 21:50:25.751" endtime="20240530 21:50:26.032"/>
</if>
<status status="PASS" starttime="20240530 21:50:25.638" endtime="20240530 21:50:26.033"/>
</kw>
<kw name="After Tests" library="base_keywords" type="TEARDOWN">
<kw name="Close Application" library="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" starttime="20240530 21:50:26.034" endtime="20240530 21:50:26.062"/>
</kw>
<status status="PASS" starttime="20240530 21:50:26.033" endtime="20240530 21:50:26.062"/>
</kw>
<tag>filter_products</tag>
<status status="PASS" starttime="20240530 21:50:12.487" endtime="20240530 21:50:26.062"/>
</test>
<status status="PASS" starttime="20240530 21:50:12.387" endtime="20240530 21:50:26.062"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">filter_products</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
